rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reminders - allow users to read their own reminders and family-assigned reminders
    match /reminders/{reminderId} {
      allow read: if request.auth != null && (
        // User's own reminders
        resource.data.userId == request.auth.uid ||
        // Reminders assigned to this user
        (resource.data.assignedTo != null && request.auth.uid in resource.data.assignedTo) ||
        // Family reminders that are shared
        (resource.data.sharedWithFamily == true && resource.data.familyId != null)
      );
      
      allow write: if request.auth != null && (
        // User can write their own reminders
        resource.data.userId == request.auth.uid ||
        // User can write reminders assigned to them
        (resource.data.assignedTo != null && request.auth.uid in resource.data.assignedTo) ||
        // User can create new reminders
        resource == null
      );
    }
    
    // Users can read and write their own countdowns
    match /countdowns/{countdownId} {
      allow read, write: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
    }
    
    // Task types - users can read all, but only create/update/delete their own
    match /taskTypes/{taskTypeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource == null || resource.data.createdBy == request.auth.uid);
    }
    
    // Family collections - allow authenticated users to create and manage families
    match /families/{familyId} {
      allow read, write: if request.auth != null;
    }
    
    // Family members - allow authenticated users to read/write
    match /familyMembers/{memberId} {
      allow read, write: if request.auth != null;
    }
    
    // Family activities - allow authenticated users to read/write
    match /familyActivities/{activityId} {
      allow read, write: if request.auth != null;
    }
    
    // Family invitations - allow authenticated users to send and manage invitations
    match /familyInvitations/{invitationId} {
      allow read, write: if request.auth != null;
    }
    
    // Family notifications - allow family members to read notifications for their family
    match /familyNotifications/{notificationId} {
      allow read: if request.auth != null && (
        // User can read notifications for families they belong to
        resource.data.familyId != null
      );
      
      allow write: if request.auth != null && (
        // User can create notifications for their family
        request.resource.data.familyId != null
      );
    }
    
    // User assignments - allow users to read/write their own assignment records
    match /userAssignments/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Task assignments - allow authenticated users to create assignment records
    // These trigger Cloud Functions for cross-device notifications
    match /taskAssignments/{assignmentId} {
      allow read, write: if request.auth != null;
    }
    
    // Scheduled notifications - allow authenticated users to create scheduled notifications
    // These are processed by Cloud Functions for high-priority notifications
    match /scheduledNotifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    // FCM notifications - allow authenticated users to create FCM notification records
    // These are processed by Cloud Functions for reliable delivery
    match /fcmNotifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    // Lists - proper security rules with ownership and sharing checks
    match /lists/{listId} {
      allow read: if request.auth != null && (
        // User's own lists
        resource.data.createdBy == request.auth.uid ||
        // Shared lists (not private) that belong to user's family
        (resource.data.isPrivate == false && resource.data.familyId != null) ||
        // Any non-private list (shared lists)
        (resource.data.isPrivate == false)
      );
      
      allow create: if request.auth != null && 
        request.resource.data.createdBy == request.auth.uid;
      
      allow update: if request.auth != null && (
        // User can update their own lists
        resource.data.createdBy == request.auth.uid ||
        // User can update any shared list (not private)
        (resource.data.isPrivate == false)
      );
      
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
    }
    
    // Deny all other operations
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 